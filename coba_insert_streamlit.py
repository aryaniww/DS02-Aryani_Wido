# -*- coding: utf-8 -*-
"""coba insert streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VW-fHvKWirZRhn6LEq19BT0-qzO9maT6
"""

import streamlit as st
import numpy as np
import pandas as pd
import pickle

# Load model yang sudah dilatih sebelumnya
def load_model():
    with open("random_forest_model.pkl", "rb") as file:
        model = pickle.load(file)
    return model

model = load_model()

# Judul aplikasi
st.title("Prediksi Potabilitas Air Menggunakan Random Forest")

# Deskripsi aplikasi
st.write("Masukkan data air secara manual untuk memprediksi apakah air tersebut layak untuk diminum.")

# Form input data
ph = st.number_input("pH (keasaman air):", min_value=0.0, max_value=14.0, step=0.1)
hardness = st.number_input("Hardness (kadar kekerasan air, mg/L):", min_value=0.0)
solids = st.number_input("Solids (jumlah padatan terlarut, mg/L):", min_value=0.0)
chloramines = st.number_input("Chloramines (kadar kloramin, mg/L):", min_value=0.0)
sulfate = st.number_input("Sulfate (kadar sulfat, mg/L):", min_value=0.0)
conductivity = st.number_input("Conductivity (konduktivitas, µS/cm):", min_value=0.0)
organic_carbon = st.number_input("Organic Carbon (karbon organik, mg/L):", min_value=0.0)
trihalomethanes = st.number_input("Trihalomethanes (kadar trihalomethanes, µg/L):", min_value=0.0)
turbidity = st.number_input("Turbidity (kekeruhan, NTU):", min_value=0.0)

# Tombol prediksi
if st.button("Prediksi Potabilitas"):
    # Data yang dimasukkan pengguna
    input_data = np.array([[ph, hardness, solids, chloramines, sulfate, conductivity, organic_carbon, trihalomethanes, turbidity]])

    # Prediksi menggunakan model
    prediction = model.predict(input_data)

    # Menampilkan hasil prediksi
    if prediction[0] == 1:
        st.success("Hasil prediksi: Air ini layak untuk diminum.")
    else:
        st.error("Hasil prediksi: Air ini tidak layak untuk diminum.")
